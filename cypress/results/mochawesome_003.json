{
  "stats": {
    "suites": 8,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-22T01:30:46.278Z",
    "end": "2023-03-22T01:31:10.921Z",
    "duration": 24643,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fc76c353-790c-4c8b-bb9c-845cc865b376",
      "title": "",
      "fullFile": "cypress/e2e/example.cy.js",
      "file": "cypress/e2e/example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "75f5a3a7-01f8-446a-8f26-a0c5d72ee737",
          "title": "New Todo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to add todo items",
              "fullTitle": "New Todo should allow me to add todo items",
              "timedOut": null,
              "duration": 695,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\n// Create 1st todo.\nnewTodo.type(TODO_ITEMS[0] + '{enter}');\n// Make sure the list only has one todo item.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', TODO_ITEMS[0]);\n// Create 2nd todo.\nnewTodo.type(TODO_ITEMS[1] + '{enter}');\n// Make sure the list now has two todo items.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.wrap(2).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(2);",
              "err": {},
              "uuid": "a9b84444-afc1-45fa-87c8-a6b3fc8d4cca",
              "parentUUID": "75f5a3a7-01f8-446a-8f26-a0c5d72ee737",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear text input field when an item is added",
              "fullTitle": "New Todo should clear text input field when an item is added",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\n// Create one todo item.\nnewTodo.type(TODO_ITEMS[0] + '{enter}');\n// Check that input is empty.\nnewTodo.should('be.empty');\n//   cy.wrap(1).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(1);",
              "err": {},
              "uuid": "b31dcc37-902b-491c-9660-c42be3f134f1",
              "parentUUID": "75f5a3a7-01f8-446a-8f26-a0c5d72ee737",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should append new items to the bottom of the list",
              "fullTitle": "New Todo should append new items to the bottom of the list",
              "timedOut": null,
              "duration": 888,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create 3 items.\ncreateDefaultTodos();\n// create a todo count locator\nconst todoCount = cy.get('[data-testid=\"todo-count\"]');\n// Check test using different methods.\ncy.contains('3 items left').should('be.visible');\ntodoCount.should('have.text', '3 items left');\ntodoCount.should('contain', '3');\n//   todoCount.should('match', /3/);\n// Check all items in one call.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}${TODO_ITEMS[2]}`);\n//   cy.wrap(3).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(3);",
              "err": {},
              "uuid": "1fa9c5e8-8177-410a-bc9a-f9255b05b1f5",
              "parentUUID": "75f5a3a7-01f8-446a-8f26-a0c5d72ee737",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9b84444-afc1-45fa-87c8-a6b3fc8d4cca",
            "b31dcc37-902b-491c-9660-c42be3f134f1",
            "1fa9c5e8-8177-410a-bc9a-f9255b05b1f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1902,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "619b19bb-096f-42f8-b693-b05760375b95",
          "title": "Mark all as completed",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to mark all items as completed",
              "fullTitle": "Mark all as completed should allow me to mark all items as completed",
              "timedOut": null,
              "duration": 956,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Complete all todos.\ncy.get('label[for=\"toggle-all\"]').click();\n// Ensure all todos have 'completed' class.\ncy.get('.todo-list li').should('have.class', 'completed');\ncheckNumberOfCompletedTodosInLocalStorage(3);",
              "err": {},
              "uuid": "62915068-d046-432f-896c-d4e215599307",
              "parentUUID": "619b19bb-096f-42f8-b693-b05760375b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to clear the complete state of all items",
              "fullTitle": "Mark all as completed should allow me to clear the complete state of all items",
              "timedOut": null,
              "duration": 1039,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const toggleAll = cy.get('label[for=\"toggle-all\"]');\n// Check and then immediately uncheck.\ntoggleAll.click();\ntoggleAll.click();\n// Should be no completed classes.\ncy.get('.todo-list li').should('not.have.class', 'completed');",
              "err": {},
              "uuid": "eb7e7413-1683-49e4-a8d8-9c29be8a4d9e",
              "parentUUID": "619b19bb-096f-42f8-b693-b05760375b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "complete all checkbox should update state when items are completed / cleared",
              "fullTitle": "Mark all as completed complete all checkbox should update state when items are completed / cleared",
              "timedOut": null,
              "duration": 1095,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const toggleAll = cy.get('label[for=\"toggle-all\"]');\ntoggleAll.click();\ncy.get('.todo-list li:first-child').find('input[type=\"checkbox\"]').uncheck();\ntoggleAll.should('not.be.checked');\ncy.get('.todo-list li:first-child').find('input[type=\"checkbox\"]').check();\ntoggleAll.should('be.checked');\ncheckNumberOfCompletedTodosInLocalStorage(3);",
              "err": {},
              "uuid": "e0b639d6-1ebb-432f-959d-55efac634b7a",
              "parentUUID": "619b19bb-096f-42f8-b693-b05760375b95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62915068-d046-432f-896c-d4e215599307",
            "eb7e7413-1683-49e4-a8d8-9c29be8a4d9e",
            "e0b639d6-1ebb-432f-959d-55efac634b7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3306dff7-50fb-4bd6-a4e0-849ac5125213",
          "title": "Item",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to mark items as complete",
              "fullTitle": "Item should allow me to mark items as complete",
              "timedOut": null,
              "duration": 666,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(`${TODO_ITEMS[0]}{enter}`).type(`${TODO_ITEMS[1]}{enter}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').check();\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed').find('[type=\"checkbox\"]').check();\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('have.class', 'completed');",
              "err": {},
              "uuid": "458dce80-1522-4682-9cba-93d90b8b0866",
              "parentUUID": "3306dff7-50fb-4bd6-a4e0-849ac5125213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to un-mark items as complete",
              "fullTitle": "Item should allow me to un-mark items as complete",
              "timedOut": null,
              "duration": 666,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(`${TODO_ITEMS[0]}{enter}`).type(`${TODO_ITEMS[1]}{enter}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').check().should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').uncheck().should('not.be.checked');\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('not.have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed');",
              "err": {},
              "uuid": "ece7f7de-151f-4019-8006-5a913d9cb06b",
              "parentUUID": "3306dff7-50fb-4bd6-a4e0-849ac5125213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to edit an item",
              "fullTitle": "Item should allow me to edit an item",
              "timedOut": null,
              "duration": 1409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createDefaultTodos();\ncy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').type('{enter}');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}buy some sausages${TODO_ITEMS[2]}`);\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "2877e05b-40ce-4454-805f-8ec381e0b8ef",
              "parentUUID": "3306dff7-50fb-4bd6-a4e0-849ac5125213",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "458dce80-1522-4682-9cba-93d90b8b0866",
            "ece7f7de-151f-4019-8006-5a913d9cb06b",
            "2877e05b-40ce-4454-805f-8ec381e0b8ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2741,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb4e9171-3b45-4906-86f5-063a80df1831",
          "title": "Editing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should hide other controls when editing",
              "fullTitle": "Editing should hide other controls when editing",
              "timedOut": null,
              "duration": 948,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick().should('have.class', 'editing').get('[type=\"checkbox\"]').should('not.be.visible');\ncy.get('[data-testid=\"todo-item\"]').eq(1).get('label').contains(TODO_ITEMS[1]).should('not.be.visible');",
              "err": {},
              "uuid": "55a61e4f-6a06-47fb-a4b8-07049e328148",
              "parentUUID": "fb4e9171-3b45-4906-86f5-063a80df1831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should save edits on blur",
              "fullTitle": "Editing should save edits on blur",
              "timedOut": null,
              "duration": 1328,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').blur();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3).eq(1).should('have.text', 'buy some sausages');\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "cea73ff6-1a2f-4d2f-8ee0-a33ad42167a3",
              "parentUUID": "fb4e9171-3b45-4906-86f5-063a80df1831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should trim entered text",
              "fullTitle": "Editing should trim entered text",
              "timedOut": null,
              "duration": 1478,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('    buy some sausages    ').type('{enter}');\ncy.get('.todo-list li').eq(1).should('contain', 'buy some sausages');\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "774bb2f3-593d-46dc-b418-f52205293eeb",
              "parentUUID": "fb4e9171-3b45-4906-86f5-063a80df1831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove the item if an empty text string was entered",
              "fullTitle": "Editing should remove the item if an empty text string was entered",
              "timedOut": null,
              "duration": 1146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('{enter}');\ncy.get('.todo-list li').should('have.length', 2);\ncheckTodosInLocalStorage(TODO_ITEMS[0], TODO_ITEMS[2]);",
              "err": {},
              "uuid": "d51eae9d-048f-41a3-8388-31f1fe0f4e82",
              "parentUUID": "fb4e9171-3b45-4906-86f5-063a80df1831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cancel edits on escape",
              "fullTitle": "Editing should cancel edits on escape",
              "timedOut": null,
              "duration": 1388,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').type('{esc}');\ncy.get('.todo-list li').should('have.length', 3);\ncheckTodosInLocalStorage(TODO_ITEMS[0], TODO_ITEMS[1], TODO_ITEMS[2]);",
              "err": {},
              "uuid": "b4ed7db9-16fd-4bbd-9d8c-2dcf87e9e902",
              "parentUUID": "fb4e9171-3b45-4906-86f5-063a80df1831",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55a61e4f-6a06-47fb-a4b8-07049e328148",
            "cea73ff6-1a2f-4d2f-8ee0-a33ad42167a3",
            "774bb2f3-593d-46dc-b418-f52205293eeb",
            "d51eae9d-048f-41a3-8388-31f1fe0f4e82",
            "b4ed7db9-16fd-4bbd-9d8c-2dcf87e9e902"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6288,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c82db37-71ec-41a5-b0c2-459ecdcbf6b9",
          "title": "Counter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the current number of todo items",
              "fullTitle": "Counter should display the current number of todo items",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(TODO_ITEMS[0] + '{enter}');\ncy.get('.todo-count').should('contain', '1');\ncy.get('[placeholder=\"What needs to be done?\"]').type(TODO_ITEMS[1] + '{enter}');\ncy.get('.todo-count').should('contain', '2');\ncheckNumberOfTodosInLocalStorage(2);",
              "err": {},
              "uuid": "e43aafb4-ec7e-429c-a8b5-b524c98f5fc4",
              "parentUUID": "7c82db37-71ec-41a5-b0c2-459ecdcbf6b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e43aafb4-ec7e-429c-a8b5-b524c98f5fc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 503,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ce5aff32-664d-44ff-98a4-9d3424c87d6e",
          "title": "Clear completed button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the correct text",
              "fullTitle": "Clear completed button should display the correct text",
              "timedOut": null,
              "duration": 929,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.todo-list li .toggle').first().check();\ncy.contains('Clear completed').should('be.visible');",
              "err": {},
              "uuid": "84236b54-d6ce-486f-8810-1d1b3ebb1db9",
              "parentUUID": "ce5aff32-664d-44ff-98a4-9d3424c87d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove completed items when clicked",
              "fullTitle": "Clear completed button should remove completed items when clicked",
              "timedOut": null,
              "duration": 1009,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('input[type=\"checkbox\"]').check();\ncy.contains('Clear completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2).should('contain', TODO_ITEMS[0]).should('contain', TODO_ITEMS[2]);",
              "err": {},
              "uuid": "6e9851de-f08d-42ab-9a3c-3f801819e22e",
              "parentUUID": "ce5aff32-664d-44ff-98a4-9d3424c87d6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be hidden when there are no items that are completed",
              "fullTitle": "Clear completed button should be hidden when there are no items that are completed",
              "timedOut": null,
              "duration": 996,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.todo-list li .toggle').first().check();\ncy.get('.clear-completed').click();\ncy.get('.clear-completed').should('not.exist');",
              "err": {},
              "uuid": "543322f3-ded7-424c-a2ac-f4913db203da",
              "parentUUID": "ce5aff32-664d-44ff-98a4-9d3424c87d6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84236b54-d6ce-486f-8810-1d1b3ebb1db9",
            "6e9851de-f08d-42ab-9a3c-3f801819e22e",
            "543322f3-ded7-424c-a2ac-f4913db203da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2934,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b5faeda-69f3-4a22-946a-a1284366d49a",
          "title": "Persistence",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should persist its data",
              "fullTitle": "Persistence should persist its data",
              "timedOut": null,
              "duration": 630,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\nTODO_ITEMS.slice(0, 2).forEach(async item => {\n  await newTodo.type(`${item}{enter}`);\n});\nconst todoItems = cy.get('[data-testid=\"todo-item\"]');\nconst firstTodoCheck = todoItems.eq(0).find('[type=\"checkbox\"]');\nfirstTodoCheck.check();\ncy.get('[data-testid=\"todo-item\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').should('have.class', 'completed', '');\n// Ensure there is 1 completed item.\ncheckNumberOfCompletedTodosInLocalStorage(1);\n// Now reload.\ncy.reload();\ncy.get('[data-testid=\"todo-item\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').should('have.class', 'completed', '');",
              "err": {},
              "uuid": "9af9bd6f-158b-4df6-8aa8-c0381465f803",
              "parentUUID": "1b5faeda-69f3-4a22-946a-a1284366d49a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9af9bd6f-158b-4df6-8aa8-c0381465f803"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 630,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bbb22f2f-5e7c-42a4-878f-7059c03bf4e9",
          "title": "Routing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to display active items",
              "fullTitle": "Routing should allow me to display active items",
              "timedOut": null,
              "duration": 995,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Active').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2).should('contain', TODO_ITEMS[0]).should('contain', TODO_ITEMS[2]);",
              "err": {},
              "uuid": "4289c5ac-5cff-4e45-b711-cd7630c0cfef",
              "parentUUID": "bbb22f2f-5e7c-42a4-878f-7059c03bf4e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should respect the back button",
              "fullTitle": "Routing should respect the back button",
              "timedOut": null,
              "duration": 1362,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('All').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);\ncy.contains('Active').click();\ncy.contains('Completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 1);\ncy.go('back');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2);\ncy.go('back');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);",
              "err": {},
              "uuid": "108037b7-eb2b-49e5-85d6-9f0683ce8676",
              "parentUUID": "bbb22f2f-5e7c-42a4-878f-7059c03bf4e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display completed items",
              "fullTitle": "Routing should allow me to display completed items",
              "timedOut": null,
              "duration": 1022,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 1);",
              "err": {},
              "uuid": "76f8a374-87a1-41f0-b185-a8c3541f9f52",
              "parentUUID": "bbb22f2f-5e7c-42a4-878f-7059c03bf4e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display all items",
              "fullTitle": "Routing should allow me to display all items",
              "timedOut": null,
              "duration": 1150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Active').click();\ncy.contains('Completed').click();\ncy.contains('All').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);",
              "err": {},
              "uuid": "e78485da-ce66-410f-84ff-835fdc87e79d",
              "parentUUID": "bbb22f2f-5e7c-42a4-878f-7059c03bf4e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should highlight the currently applied filter",
              "fullTitle": "Routing should highlight the currently applied filter",
              "timedOut": null,
              "duration": 1007,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('All').should('have.class', 'selected');\nconst activeLink = cy.contains('Active');\nconst completedLink = cy.contains('Completed');\nactiveLink.click();\nactiveLink.should('have.class', 'selected');\ncompletedLink.click();\ncompletedLink.should('have.class', 'selected');",
              "err": {},
              "uuid": "81a81bac-c60d-4720-b30a-0dc9dc08ee46",
              "parentUUID": "bbb22f2f-5e7c-42a4-878f-7059c03bf4e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4289c5ac-5cff-4e45-b711-cd7630c0cfef",
            "108037b7-eb2b-49e5-85d6-9f0683ce8676",
            "76f8a374-87a1-41f0-b185-a8c3541f9f52",
            "e78485da-ce66-410f-84ff-835fdc87e79d",
            "81a81bac-c60d-4720-b30a-0dc9dc08ee46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5536,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}