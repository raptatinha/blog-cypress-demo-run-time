{
  "stats": {
    "suites": 8,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-22T01:30:16.159Z",
    "end": "2023-03-22T01:30:41.011Z",
    "duration": 24852,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "299f67f4-85c8-49ef-a79b-7fbaceb2576f",
      "title": "",
      "fullFile": "cypress/e2e/example.cy.js",
      "file": "cypress/e2e/example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "856e00c3-9dff-412e-97f1-15bc16c79c0c",
          "title": "New Todo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to add todo items",
              "fullTitle": "New Todo should allow me to add todo items",
              "timedOut": null,
              "duration": 774,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\n// Create 1st todo.\nnewTodo.type(TODO_ITEMS[0] + '{enter}');\n// Make sure the list only has one todo item.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', TODO_ITEMS[0]);\n// Create 2nd todo.\nnewTodo.type(TODO_ITEMS[1] + '{enter}');\n// Make sure the list now has two todo items.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.wrap(2).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(2);",
              "err": {},
              "uuid": "a87e62c8-bb1c-4448-ab66-f329719ea367",
              "parentUUID": "856e00c3-9dff-412e-97f1-15bc16c79c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear text input field when an item is added",
              "fullTitle": "New Todo should clear text input field when an item is added",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\n// Create one todo item.\nnewTodo.type(TODO_ITEMS[0] + '{enter}');\n// Check that input is empty.\nnewTodo.should('be.empty');\n//   cy.wrap(1).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(1);",
              "err": {},
              "uuid": "fcd2b6dd-dc11-41ef-b1cb-5d84edb4e870",
              "parentUUID": "856e00c3-9dff-412e-97f1-15bc16c79c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should append new items to the bottom of the list",
              "fullTitle": "New Todo should append new items to the bottom of the list",
              "timedOut": null,
              "duration": 883,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create 3 items.\ncreateDefaultTodos();\n// create a todo count locator\nconst todoCount = cy.get('[data-testid=\"todo-count\"]');\n// Check test using different methods.\ncy.contains('3 items left').should('be.visible');\ntodoCount.should('have.text', '3 items left');\ntodoCount.should('contain', '3');\n//   todoCount.should('match', /3/);\n// Check all items in one call.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}${TODO_ITEMS[2]}`);\n//   cy.wrap(3).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(3);",
              "err": {},
              "uuid": "14cf8830-b7d2-4cee-8a60-1b78e349ae19",
              "parentUUID": "856e00c3-9dff-412e-97f1-15bc16c79c0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a87e62c8-bb1c-4448-ab66-f329719ea367",
            "fcd2b6dd-dc11-41ef-b1cb-5d84edb4e870",
            "14cf8830-b7d2-4cee-8a60-1b78e349ae19"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a098d50a-36be-4ec9-9aca-231947d2f34e",
          "title": "Mark all as completed",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to mark all items as completed",
              "fullTitle": "Mark all as completed should allow me to mark all items as completed",
              "timedOut": null,
              "duration": 955,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Complete all todos.\ncy.get('label[for=\"toggle-all\"]').click();\n// Ensure all todos have 'completed' class.\ncy.get('.todo-list li').should('have.class', 'completed');\ncheckNumberOfCompletedTodosInLocalStorage(3);",
              "err": {},
              "uuid": "09d5f626-1339-4ce4-ba23-60a0561cee75",
              "parentUUID": "a098d50a-36be-4ec9-9aca-231947d2f34e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to clear the complete state of all items",
              "fullTitle": "Mark all as completed should allow me to clear the complete state of all items",
              "timedOut": null,
              "duration": 1039,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const toggleAll = cy.get('label[for=\"toggle-all\"]');\n// Check and then immediately uncheck.\ntoggleAll.click();\ntoggleAll.click();\n// Should be no completed classes.\ncy.get('.todo-list li').should('not.have.class', 'completed');",
              "err": {},
              "uuid": "c087adb5-040d-44ed-aaa1-b10455b3db75",
              "parentUUID": "a098d50a-36be-4ec9-9aca-231947d2f34e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "complete all checkbox should update state when items are completed / cleared",
              "fullTitle": "Mark all as completed complete all checkbox should update state when items are completed / cleared",
              "timedOut": null,
              "duration": 1111,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const toggleAll = cy.get('label[for=\"toggle-all\"]');\ntoggleAll.click();\ncy.get('.todo-list li:first-child').find('input[type=\"checkbox\"]').uncheck();\ntoggleAll.should('not.be.checked');\ncy.get('.todo-list li:first-child').find('input[type=\"checkbox\"]').check();\ntoggleAll.should('be.checked');\ncheckNumberOfCompletedTodosInLocalStorage(3);",
              "err": {},
              "uuid": "59123bb7-e1d8-4be4-9413-d4c0d9e87ac9",
              "parentUUID": "a098d50a-36be-4ec9-9aca-231947d2f34e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09d5f626-1339-4ce4-ba23-60a0561cee75",
            "c087adb5-040d-44ed-aaa1-b10455b3db75",
            "59123bb7-e1d8-4be4-9413-d4c0d9e87ac9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "22da8848-6b3c-4c77-88f6-2771526370c4",
          "title": "Item",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to mark items as complete",
              "fullTitle": "Item should allow me to mark items as complete",
              "timedOut": null,
              "duration": 671,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(`${TODO_ITEMS[0]}{enter}`).type(`${TODO_ITEMS[1]}{enter}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').check();\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed').find('[type=\"checkbox\"]').check();\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('have.class', 'completed');",
              "err": {},
              "uuid": "4576b07d-6a5a-42ef-940d-e0c4d37687ca",
              "parentUUID": "22da8848-6b3c-4c77-88f6-2771526370c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to un-mark items as complete",
              "fullTitle": "Item should allow me to un-mark items as complete",
              "timedOut": null,
              "duration": 667,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(`${TODO_ITEMS[0]}{enter}`).type(`${TODO_ITEMS[1]}{enter}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').check().should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').uncheck().should('not.be.checked');\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('not.have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed');",
              "err": {},
              "uuid": "07296706-401a-455e-bde3-7fc2ef8996b1",
              "parentUUID": "22da8848-6b3c-4c77-88f6-2771526370c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to edit an item",
              "fullTitle": "Item should allow me to edit an item",
              "timedOut": null,
              "duration": 1439,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createDefaultTodos();\ncy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').type('{enter}');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}buy some sausages${TODO_ITEMS[2]}`);\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "a679a289-0f18-4dbe-a932-d4cddc57f1a2",
              "parentUUID": "22da8848-6b3c-4c77-88f6-2771526370c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4576b07d-6a5a-42ef-940d-e0c4d37687ca",
            "07296706-401a-455e-bde3-7fc2ef8996b1",
            "a679a289-0f18-4dbe-a932-d4cddc57f1a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2777,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c5552914-4143-4c49-b5d2-017b74b9c463",
          "title": "Editing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should hide other controls when editing",
              "fullTitle": "Editing should hide other controls when editing",
              "timedOut": null,
              "duration": 947,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick().should('have.class', 'editing').get('[type=\"checkbox\"]').should('not.be.visible');\ncy.get('[data-testid=\"todo-item\"]').eq(1).get('label').contains(TODO_ITEMS[1]).should('not.be.visible');",
              "err": {},
              "uuid": "3e13ad22-b391-424e-8a12-746ee475f76a",
              "parentUUID": "c5552914-4143-4c49-b5d2-017b74b9c463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should save edits on blur",
              "fullTitle": "Editing should save edits on blur",
              "timedOut": null,
              "duration": 1374,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').blur();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3).eq(1).should('have.text', 'buy some sausages');\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "97821c9d-a0b0-4ae8-8fb0-d48a0e8286c2",
              "parentUUID": "c5552914-4143-4c49-b5d2-017b74b9c463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should trim entered text",
              "fullTitle": "Editing should trim entered text",
              "timedOut": null,
              "duration": 1502,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('    buy some sausages    ').type('{enter}');\ncy.get('.todo-list li').eq(1).should('contain', 'buy some sausages');\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "fd727486-dfcf-487d-a0ed-cb2f235bd98b",
              "parentUUID": "c5552914-4143-4c49-b5d2-017b74b9c463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove the item if an empty text string was entered",
              "fullTitle": "Editing should remove the item if an empty text string was entered",
              "timedOut": null,
              "duration": 1180,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('{enter}');\ncy.get('.todo-list li').should('have.length', 2);\ncheckTodosInLocalStorage(TODO_ITEMS[0], TODO_ITEMS[2]);",
              "err": {},
              "uuid": "c81f6d3b-3bc3-4df1-bbc4-6d26f2477361",
              "parentUUID": "c5552914-4143-4c49-b5d2-017b74b9c463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cancel edits on escape",
              "fullTitle": "Editing should cancel edits on escape",
              "timedOut": null,
              "duration": 1420,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').type('{esc}');\ncy.get('.todo-list li').should('have.length', 3);\ncheckTodosInLocalStorage(TODO_ITEMS[0], TODO_ITEMS[1], TODO_ITEMS[2]);",
              "err": {},
              "uuid": "15d2e116-3dd1-4b77-b385-f3eeb3dcbb16",
              "parentUUID": "c5552914-4143-4c49-b5d2-017b74b9c463",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e13ad22-b391-424e-8a12-746ee475f76a",
            "97821c9d-a0b0-4ae8-8fb0-d48a0e8286c2",
            "fd727486-dfcf-487d-a0ed-cb2f235bd98b",
            "c81f6d3b-3bc3-4df1-bbc4-6d26f2477361",
            "15d2e116-3dd1-4b77-b385-f3eeb3dcbb16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6423,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "461e7dfc-4ab0-4083-999c-1f679dc62c03",
          "title": "Counter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the current number of todo items",
              "fullTitle": "Counter should display the current number of todo items",
              "timedOut": null,
              "duration": 511,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(TODO_ITEMS[0] + '{enter}');\ncy.get('.todo-count').should('contain', '1');\ncy.get('[placeholder=\"What needs to be done?\"]').type(TODO_ITEMS[1] + '{enter}');\ncy.get('.todo-count').should('contain', '2');\ncheckNumberOfTodosInLocalStorage(2);",
              "err": {},
              "uuid": "39cf9c36-704c-46b5-ac15-b078c867b8ce",
              "parentUUID": "461e7dfc-4ab0-4083-999c-1f679dc62c03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39cf9c36-704c-46b5-ac15-b078c867b8ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 511,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "576551a2-b4b8-4c43-933a-0f63bcda020e",
          "title": "Clear completed button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the correct text",
              "fullTitle": "Clear completed button should display the correct text",
              "timedOut": null,
              "duration": 935,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.todo-list li .toggle').first().check();\ncy.contains('Clear completed').should('be.visible');",
              "err": {},
              "uuid": "b07efd27-d316-4547-a2b0-c38d2318917c",
              "parentUUID": "576551a2-b4b8-4c43-933a-0f63bcda020e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove completed items when clicked",
              "fullTitle": "Clear completed button should remove completed items when clicked",
              "timedOut": null,
              "duration": 1007,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('input[type=\"checkbox\"]').check();\ncy.contains('Clear completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2).should('contain', TODO_ITEMS[0]).should('contain', TODO_ITEMS[2]);",
              "err": {},
              "uuid": "055e51d5-3ec0-4f6f-b8bf-73a4bb21849f",
              "parentUUID": "576551a2-b4b8-4c43-933a-0f63bcda020e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be hidden when there are no items that are completed",
              "fullTitle": "Clear completed button should be hidden when there are no items that are completed",
              "timedOut": null,
              "duration": 1005,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.todo-list li .toggle').first().check();\ncy.get('.clear-completed').click();\ncy.get('.clear-completed').should('not.exist');",
              "err": {},
              "uuid": "40e808f7-50d1-4e05-873d-f6e64231e8f0",
              "parentUUID": "576551a2-b4b8-4c43-933a-0f63bcda020e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b07efd27-d316-4547-a2b0-c38d2318917c",
            "055e51d5-3ec0-4f6f-b8bf-73a4bb21849f",
            "40e808f7-50d1-4e05-873d-f6e64231e8f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2947,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b2533e8-cee2-492a-b613-f3d3b291be2a",
          "title": "Persistence",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should persist its data",
              "fullTitle": "Persistence should persist its data",
              "timedOut": null,
              "duration": 621,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\nTODO_ITEMS.slice(0, 2).forEach(async item => {\n  await newTodo.type(`${item}{enter}`);\n});\nconst todoItems = cy.get('[data-testid=\"todo-item\"]');\nconst firstTodoCheck = todoItems.eq(0).find('[type=\"checkbox\"]');\nfirstTodoCheck.check();\ncy.get('[data-testid=\"todo-item\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').should('have.class', 'completed', '');\n// Ensure there is 1 completed item.\ncheckNumberOfCompletedTodosInLocalStorage(1);\n// Now reload.\ncy.reload();\ncy.get('[data-testid=\"todo-item\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').should('have.class', 'completed', '');",
              "err": {},
              "uuid": "23d58fde-23cb-478f-a4b2-6a6503e199e1",
              "parentUUID": "7b2533e8-cee2-492a-b613-f3d3b291be2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23d58fde-23cb-478f-a4b2-6a6503e199e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 621,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d90c7fa8-d86c-4bc8-b55f-a3a8ef0d96d1",
          "title": "Routing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to display active items",
              "fullTitle": "Routing should allow me to display active items",
              "timedOut": null,
              "duration": 1015,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Active').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2).should('contain', TODO_ITEMS[0]).should('contain', TODO_ITEMS[2]);",
              "err": {},
              "uuid": "22400321-bbeb-4eb8-a162-1d7f52af1e58",
              "parentUUID": "d90c7fa8-d86c-4bc8-b55f-a3a8ef0d96d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should respect the back button",
              "fullTitle": "Routing should respect the back button",
              "timedOut": null,
              "duration": 1379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('All').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);\ncy.contains('Active').click();\ncy.contains('Completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 1);\ncy.go('back');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2);\ncy.go('back');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);",
              "err": {},
              "uuid": "b6d2fe68-7c9b-4b00-85fc-3dc644d38d9f",
              "parentUUID": "d90c7fa8-d86c-4bc8-b55f-a3a8ef0d96d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display completed items",
              "fullTitle": "Routing should allow me to display completed items",
              "timedOut": null,
              "duration": 1040,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 1);",
              "err": {},
              "uuid": "a771e928-95a3-4786-bbf5-4b27cad66930",
              "parentUUID": "d90c7fa8-d86c-4bc8-b55f-a3a8ef0d96d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display all items",
              "fullTitle": "Routing should allow me to display all items",
              "timedOut": null,
              "duration": 1195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Active').click();\ncy.contains('Completed').click();\ncy.contains('All').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);",
              "err": {},
              "uuid": "1349f2aa-320d-493b-9aac-db6db00bfa2c",
              "parentUUID": "d90c7fa8-d86c-4bc8-b55f-a3a8ef0d96d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should highlight the currently applied filter",
              "fullTitle": "Routing should highlight the currently applied filter",
              "timedOut": null,
              "duration": 1013,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('All').should('have.class', 'selected');\nconst activeLink = cy.contains('Active');\nconst completedLink = cy.contains('Completed');\nactiveLink.click();\nactiveLink.should('have.class', 'selected');\ncompletedLink.click();\ncompletedLink.should('have.class', 'selected');",
              "err": {},
              "uuid": "b628df58-5033-49af-b48b-3c692195a190",
              "parentUUID": "d90c7fa8-d86c-4bc8-b55f-a3a8ef0d96d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22400321-bbeb-4eb8-a162-1d7f52af1e58",
            "b6d2fe68-7c9b-4b00-85fc-3dc644d38d9f",
            "a771e928-95a3-4786-bbf5-4b27cad66930",
            "1349f2aa-320d-493b-9aac-db6db00bfa2c",
            "b628df58-5033-49af-b48b-3c692195a190"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5642,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}