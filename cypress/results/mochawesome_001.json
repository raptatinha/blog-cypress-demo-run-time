{
  "stats": {
    "suites": 8,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-22T01:28:26.134Z",
    "end": "2023-03-22T01:28:51.198Z",
    "duration": 25064,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "254f1311-d80b-4f54-9b06-43a1b32c892c",
      "title": "",
      "fullFile": "cypress/e2e/example.cy.js",
      "file": "cypress/e2e/example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "01c746bf-811c-4d70-996a-8ac51da07e79",
          "title": "New Todo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to add todo items",
              "fullTitle": "New Todo should allow me to add todo items",
              "timedOut": null,
              "duration": 785,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\n// Create 1st todo.\nnewTodo.type(TODO_ITEMS[0] + '{enter}');\n// Make sure the list only has one todo item.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', TODO_ITEMS[0]);\n// Create 2nd todo.\nnewTodo.type(TODO_ITEMS[1] + '{enter}');\n// Make sure the list now has two todo items.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.wrap(2).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(2);",
              "err": {},
              "uuid": "b7da495c-2c8c-475a-b69f-7001605ab5b6",
              "parentUUID": "01c746bf-811c-4d70-996a-8ac51da07e79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear text input field when an item is added",
              "fullTitle": "New Todo should clear text input field when an item is added",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\n// Create one todo item.\nnewTodo.type(TODO_ITEMS[0] + '{enter}');\n// Check that input is empty.\nnewTodo.should('be.empty');\n//   cy.wrap(1).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(1);",
              "err": {},
              "uuid": "faa84e3b-c3ee-4bd9-bb5d-64ad11ef21d8",
              "parentUUID": "01c746bf-811c-4d70-996a-8ac51da07e79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should append new items to the bottom of the list",
              "fullTitle": "New Todo should append new items to the bottom of the list",
              "timedOut": null,
              "duration": 880,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create 3 items.\ncreateDefaultTodos();\n// create a todo count locator\nconst todoCount = cy.get('[data-testid=\"todo-count\"]');\n// Check test using different methods.\ncy.contains('3 items left').should('be.visible');\ntodoCount.should('have.text', '3 items left');\ntodoCount.should('contain', '3');\n//   todoCount.should('match', /3/);\n// Check all items in one call.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}${TODO_ITEMS[2]}`);\n//   cy.wrap(3).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(3);",
              "err": {},
              "uuid": "e0e43e0c-ef68-4e8d-88e2-85e3b4638808",
              "parentUUID": "01c746bf-811c-4d70-996a-8ac51da07e79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7da495c-2c8c-475a-b69f-7001605ab5b6",
            "faa84e3b-c3ee-4bd9-bb5d-64ad11ef21d8",
            "e0e43e0c-ef68-4e8d-88e2-85e3b4638808"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1976,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32fb361b-52ca-4bc0-9676-43224463f553",
          "title": "Mark all as completed",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to mark all items as completed",
              "fullTitle": "Mark all as completed should allow me to mark all items as completed",
              "timedOut": null,
              "duration": 958,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Complete all todos.\ncy.get('label[for=\"toggle-all\"]').click();\n// Ensure all todos have 'completed' class.\ncy.get('.todo-list li').should('have.class', 'completed');\ncheckNumberOfCompletedTodosInLocalStorage(3);",
              "err": {},
              "uuid": "246743f5-973e-432f-82fd-8ab5a10b72d8",
              "parentUUID": "32fb361b-52ca-4bc0-9676-43224463f553",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to clear the complete state of all items",
              "fullTitle": "Mark all as completed should allow me to clear the complete state of all items",
              "timedOut": null,
              "duration": 1034,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const toggleAll = cy.get('label[for=\"toggle-all\"]');\n// Check and then immediately uncheck.\ntoggleAll.click();\ntoggleAll.click();\n// Should be no completed classes.\ncy.get('.todo-list li').should('not.have.class', 'completed');",
              "err": {},
              "uuid": "7d10b3ea-58a2-4508-b91c-622f38d05de8",
              "parentUUID": "32fb361b-52ca-4bc0-9676-43224463f553",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "complete all checkbox should update state when items are completed / cleared",
              "fullTitle": "Mark all as completed complete all checkbox should update state when items are completed / cleared",
              "timedOut": null,
              "duration": 1092,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const toggleAll = cy.get('label[for=\"toggle-all\"]');\ntoggleAll.click();\ncy.get('.todo-list li:first-child').find('input[type=\"checkbox\"]').uncheck();\ntoggleAll.should('not.be.checked');\ncy.get('.todo-list li:first-child').find('input[type=\"checkbox\"]').check();\ntoggleAll.should('be.checked');\ncheckNumberOfCompletedTodosInLocalStorage(3);",
              "err": {},
              "uuid": "3dfe112c-4cb8-48a9-8710-84da0ce74df1",
              "parentUUID": "32fb361b-52ca-4bc0-9676-43224463f553",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "246743f5-973e-432f-82fd-8ab5a10b72d8",
            "7d10b3ea-58a2-4508-b91c-622f38d05de8",
            "3dfe112c-4cb8-48a9-8710-84da0ce74df1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1abe6292-8714-434d-b59e-477878b38707",
          "title": "Item",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to mark items as complete",
              "fullTitle": "Item should allow me to mark items as complete",
              "timedOut": null,
              "duration": 658,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(`${TODO_ITEMS[0]}{enter}`).type(`${TODO_ITEMS[1]}{enter}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').check();\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed').find('[type=\"checkbox\"]').check();\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('have.class', 'completed');",
              "err": {},
              "uuid": "9ca5beca-06f5-4828-95d7-b0aa77c4399a",
              "parentUUID": "1abe6292-8714-434d-b59e-477878b38707",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to un-mark items as complete",
              "fullTitle": "Item should allow me to un-mark items as complete",
              "timedOut": null,
              "duration": 661,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(`${TODO_ITEMS[0]}{enter}`).type(`${TODO_ITEMS[1]}{enter}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').check().should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').uncheck().should('not.be.checked');\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('not.have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed');",
              "err": {},
              "uuid": "ee5c736f-75ee-4dc6-80e1-809513d0678c",
              "parentUUID": "1abe6292-8714-434d-b59e-477878b38707",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to edit an item",
              "fullTitle": "Item should allow me to edit an item",
              "timedOut": null,
              "duration": 1446,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createDefaultTodos();\ncy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').type('{enter}');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}buy some sausages${TODO_ITEMS[2]}`);\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "bce9c754-c0fd-4043-b6a6-97cf1ca0a9b3",
              "parentUUID": "1abe6292-8714-434d-b59e-477878b38707",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ca5beca-06f5-4828-95d7-b0aa77c4399a",
            "ee5c736f-75ee-4dc6-80e1-809513d0678c",
            "bce9c754-c0fd-4043-b6a6-97cf1ca0a9b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2765,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ad2a53f6-1c34-4906-b030-d52d73b4c754",
          "title": "Editing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should hide other controls when editing",
              "fullTitle": "Editing should hide other controls when editing",
              "timedOut": null,
              "duration": 962,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick().should('have.class', 'editing').get('[type=\"checkbox\"]').should('not.be.visible');\ncy.get('[data-testid=\"todo-item\"]').eq(1).get('label').contains(TODO_ITEMS[1]).should('not.be.visible');",
              "err": {},
              "uuid": "7992a041-c1a0-4e13-b394-cfe2497cd388",
              "parentUUID": "ad2a53f6-1c34-4906-b030-d52d73b4c754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should save edits on blur",
              "fullTitle": "Editing should save edits on blur",
              "timedOut": null,
              "duration": 1349,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').blur();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3).eq(1).should('have.text', 'buy some sausages');\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "373134dd-55f2-4125-8f20-b0710e20507e",
              "parentUUID": "ad2a53f6-1c34-4906-b030-d52d73b4c754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should trim entered text",
              "fullTitle": "Editing should trim entered text",
              "timedOut": null,
              "duration": 1519,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('    buy some sausages    ').type('{enter}');\ncy.get('.todo-list li').eq(1).should('contain', 'buy some sausages');\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "dd9174ce-e416-45eb-95d2-cfbdd2b98eb1",
              "parentUUID": "ad2a53f6-1c34-4906-b030-d52d73b4c754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove the item if an empty text string was entered",
              "fullTitle": "Editing should remove the item if an empty text string was entered",
              "timedOut": null,
              "duration": 1147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('{enter}');\ncy.get('.todo-list li').should('have.length', 2);\ncheckTodosInLocalStorage(TODO_ITEMS[0], TODO_ITEMS[2]);",
              "err": {},
              "uuid": "75776008-bbc2-4309-b7b4-6f19ff42e233",
              "parentUUID": "ad2a53f6-1c34-4906-b030-d52d73b4c754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cancel edits on escape",
              "fullTitle": "Editing should cancel edits on escape",
              "timedOut": null,
              "duration": 1395,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').type('{esc}');\ncy.get('.todo-list li').should('have.length', 3);\ncheckTodosInLocalStorage(TODO_ITEMS[0], TODO_ITEMS[1], TODO_ITEMS[2]);",
              "err": {},
              "uuid": "4b862475-3840-4718-9732-ab0da8bbeda7",
              "parentUUID": "ad2a53f6-1c34-4906-b030-d52d73b4c754",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7992a041-c1a0-4e13-b394-cfe2497cd388",
            "373134dd-55f2-4125-8f20-b0710e20507e",
            "dd9174ce-e416-45eb-95d2-cfbdd2b98eb1",
            "75776008-bbc2-4309-b7b4-6f19ff42e233",
            "4b862475-3840-4718-9732-ab0da8bbeda7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6372,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c807e8a-40f2-4505-971b-88380c457809",
          "title": "Counter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the current number of todo items",
              "fullTitle": "Counter should display the current number of todo items",
              "timedOut": null,
              "duration": 496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(TODO_ITEMS[0] + '{enter}');\ncy.get('.todo-count').should('contain', '1');\ncy.get('[placeholder=\"What needs to be done?\"]').type(TODO_ITEMS[1] + '{enter}');\ncy.get('.todo-count').should('contain', '2');\ncheckNumberOfTodosInLocalStorage(2);",
              "err": {},
              "uuid": "79e5d1ce-1938-4435-a50d-a5f76a866484",
              "parentUUID": "1c807e8a-40f2-4505-971b-88380c457809",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79e5d1ce-1938-4435-a50d-a5f76a866484"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 496,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "85ba1aaf-a05a-4bc6-a132-3d2c51f1dc01",
          "title": "Clear completed button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the correct text",
              "fullTitle": "Clear completed button should display the correct text",
              "timedOut": null,
              "duration": 935,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.todo-list li .toggle').first().check();\ncy.contains('Clear completed').should('be.visible');",
              "err": {},
              "uuid": "e06eb5a6-c83b-407e-88f7-3e1193b32c09",
              "parentUUID": "85ba1aaf-a05a-4bc6-a132-3d2c51f1dc01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove completed items when clicked",
              "fullTitle": "Clear completed button should remove completed items when clicked",
              "timedOut": null,
              "duration": 1010,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('input[type=\"checkbox\"]').check();\ncy.contains('Clear completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2).should('contain', TODO_ITEMS[0]).should('contain', TODO_ITEMS[2]);",
              "err": {},
              "uuid": "c51d19e4-d329-4293-8ecb-2f3070c3e027",
              "parentUUID": "85ba1aaf-a05a-4bc6-a132-3d2c51f1dc01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be hidden when there are no items that are completed",
              "fullTitle": "Clear completed button should be hidden when there are no items that are completed",
              "timedOut": null,
              "duration": 997,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.todo-list li .toggle').first().check();\ncy.get('.clear-completed').click();\ncy.get('.clear-completed').should('not.exist');",
              "err": {},
              "uuid": "8c8208ac-8e7d-49ee-8733-1af0e5fb185b",
              "parentUUID": "85ba1aaf-a05a-4bc6-a132-3d2c51f1dc01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e06eb5a6-c83b-407e-88f7-3e1193b32c09",
            "c51d19e4-d329-4293-8ecb-2f3070c3e027",
            "8c8208ac-8e7d-49ee-8733-1af0e5fb185b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2942,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "715a8d33-4ab7-4da7-9eb5-4efc2a1f85ca",
          "title": "Persistence",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should persist its data",
              "fullTitle": "Persistence should persist its data",
              "timedOut": null,
              "duration": 811,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\nTODO_ITEMS.slice(0, 2).forEach(async item => {\n  await newTodo.type(`${item}{enter}`);\n});\nconst todoItems = cy.get('[data-testid=\"todo-item\"]');\nconst firstTodoCheck = todoItems.eq(0).find('[type=\"checkbox\"]');\nfirstTodoCheck.check();\ncy.get('[data-testid=\"todo-item\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').should('have.class', 'completed', '');\n// Ensure there is 1 completed item.\ncheckNumberOfCompletedTodosInLocalStorage(1);\n// Now reload.\ncy.reload();\ncy.get('[data-testid=\"todo-item\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').should('have.class', 'completed', '');",
              "err": {},
              "uuid": "e68a8cf4-1cf3-4678-9cdd-d08f3841e2a2",
              "parentUUID": "715a8d33-4ab7-4da7-9eb5-4efc2a1f85ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e68a8cf4-1cf3-4678-9cdd-d08f3841e2a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 811,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8a9c9e00-fe84-44fa-891e-20b62c53623f",
          "title": "Routing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to display active items",
              "fullTitle": "Routing should allow me to display active items",
              "timedOut": null,
              "duration": 998,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Active').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2).should('contain', TODO_ITEMS[0]).should('contain', TODO_ITEMS[2]);",
              "err": {},
              "uuid": "7d7a7153-23f6-4673-befd-25c7318906c7",
              "parentUUID": "8a9c9e00-fe84-44fa-891e-20b62c53623f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should respect the back button",
              "fullTitle": "Routing should respect the back button",
              "timedOut": null,
              "duration": 1391,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('All').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);\ncy.contains('Active').click();\ncy.contains('Completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 1);\ncy.go('back');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2);\ncy.go('back');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);",
              "err": {},
              "uuid": "98f75a0f-b35d-407a-ac5b-9fdeef1ce7c4",
              "parentUUID": "8a9c9e00-fe84-44fa-891e-20b62c53623f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display completed items",
              "fullTitle": "Routing should allow me to display completed items",
              "timedOut": null,
              "duration": 1021,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 1);",
              "err": {},
              "uuid": "bf9ca681-0483-471d-b2d8-5187d7bbd7fc",
              "parentUUID": "8a9c9e00-fe84-44fa-891e-20b62c53623f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display all items",
              "fullTitle": "Routing should allow me to display all items",
              "timedOut": null,
              "duration": 1160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Active').click();\ncy.contains('Completed').click();\ncy.contains('All').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);",
              "err": {},
              "uuid": "17d38f41-5ceb-42d4-9dea-2e15254f144d",
              "parentUUID": "8a9c9e00-fe84-44fa-891e-20b62c53623f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should highlight the currently applied filter",
              "fullTitle": "Routing should highlight the currently applied filter",
              "timedOut": null,
              "duration": 1019,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('All').should('have.class', 'selected');\nconst activeLink = cy.contains('Active');\nconst completedLink = cy.contains('Completed');\nactiveLink.click();\nactiveLink.should('have.class', 'selected');\ncompletedLink.click();\ncompletedLink.should('have.class', 'selected');",
              "err": {},
              "uuid": "469c70b6-71e9-4d9a-8ac6-4ef17e5aafdc",
              "parentUUID": "8a9c9e00-fe84-44fa-891e-20b62c53623f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d7a7153-23f6-4673-befd-25c7318906c7",
            "98f75a0f-b35d-407a-ac5b-9fdeef1ce7c4",
            "bf9ca681-0483-471d-b2d8-5187d7bbd7fc",
            "17d38f41-5ceb-42d4-9dea-2e15254f144d",
            "469c70b6-71e9-4d9a-8ac6-4ef17e5aafdc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5589,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}