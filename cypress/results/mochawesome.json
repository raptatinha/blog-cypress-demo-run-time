{
  "stats": {
    "suites": 8,
    "tests": 24,
    "passes": 24,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-22T01:15:23.640Z",
    "end": "2023-03-22T01:15:49.409Z",
    "duration": 25769,
    "testsRegistered": 24,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c7fa4418-0601-42ff-8411-b7f2b3e0693e",
      "title": "",
      "fullFile": "cypress/e2e/example.cy.js",
      "file": "cypress/e2e/example.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7f9261be-019c-49c8-9da4-4d61e9408f3a",
          "title": "New Todo",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to add todo items",
              "fullTitle": "New Todo should allow me to add todo items",
              "timedOut": null,
              "duration": 832,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\n// Create 1st todo.\nnewTodo.type(TODO_ITEMS[0] + '{enter}');\n// Make sure the list only has one todo item.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', TODO_ITEMS[0]);\n// Create 2nd todo.\nnewTodo.type(TODO_ITEMS[1] + '{enter}');\n// Make sure the list now has two todo items.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.wrap(2).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(2);",
              "err": {},
              "uuid": "1fb48a60-a8a3-4b71-a297-8788d21396a8",
              "parentUUID": "7f9261be-019c-49c8-9da4-4d61e9408f3a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear text input field when an item is added",
              "fullTitle": "New Todo should clear text input field when an item is added",
              "timedOut": null,
              "duration": 329,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\n// Create one todo item.\nnewTodo.type(TODO_ITEMS[0] + '{enter}');\n// Check that input is empty.\nnewTodo.should('be.empty');\n//   cy.wrap(1).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(1);",
              "err": {},
              "uuid": "c229715d-99b2-406d-8ab6-dbfb0b6ddc6f",
              "parentUUID": "7f9261be-019c-49c8-9da4-4d61e9408f3a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should append new items to the bottom of the list",
              "fullTitle": "New Todo should append new items to the bottom of the list",
              "timedOut": null,
              "duration": 909,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create 3 items.\ncreateDefaultTodos();\n// create a todo count locator\nconst todoCount = cy.get('[data-testid=\"todo-count\"]');\n// Check test using different methods.\ncy.contains('3 items left').should('be.visible');\ntodoCount.should('have.text', '3 items left');\ntodoCount.should('contain', '3');\n//   todoCount.should('match', /3/);\n// Check all items in one call.\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}${TODO_ITEMS[2]}`);\n//   cy.wrap(3).as('numberOfTodos');\ncheckNumberOfTodosInLocalStorage(3);",
              "err": {},
              "uuid": "475cdbcc-ea2e-42de-9e40-336c7ccc2282",
              "parentUUID": "7f9261be-019c-49c8-9da4-4d61e9408f3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fb48a60-a8a3-4b71-a297-8788d21396a8",
            "c229715d-99b2-406d-8ab6-dbfb0b6ddc6f",
            "475cdbcc-ea2e-42de-9e40-336c7ccc2282"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2070,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dea10a2a-fdcf-4d86-8115-76a9a63d0694",
          "title": "Mark all as completed",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to mark all items as completed",
              "fullTitle": "Mark all as completed should allow me to mark all items as completed",
              "timedOut": null,
              "duration": 973,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Complete all todos.\ncy.get('label[for=\"toggle-all\"]').click();\n// Ensure all todos have 'completed' class.\ncy.get('.todo-list li').should('have.class', 'completed');\ncheckNumberOfCompletedTodosInLocalStorage(3);",
              "err": {},
              "uuid": "ab8ea4d9-e551-4bce-9e0c-514c12d64b96",
              "parentUUID": "dea10a2a-fdcf-4d86-8115-76a9a63d0694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to clear the complete state of all items",
              "fullTitle": "Mark all as completed should allow me to clear the complete state of all items",
              "timedOut": null,
              "duration": 1037,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const toggleAll = cy.get('label[for=\"toggle-all\"]');\n// Check and then immediately uncheck.\ntoggleAll.click();\ntoggleAll.click();\n// Should be no completed classes.\ncy.get('.todo-list li').should('not.have.class', 'completed');",
              "err": {},
              "uuid": "f04a3fc9-a103-4e8f-8be3-d9cbdfe2be1b",
              "parentUUID": "dea10a2a-fdcf-4d86-8115-76a9a63d0694",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "complete all checkbox should update state when items are completed / cleared",
              "fullTitle": "Mark all as completed complete all checkbox should update state when items are completed / cleared",
              "timedOut": null,
              "duration": 1128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const toggleAll = cy.get('label[for=\"toggle-all\"]');\ntoggleAll.click();\ncy.get('.todo-list li:first-child').find('input[type=\"checkbox\"]').uncheck();\ntoggleAll.should('not.be.checked');\ncy.get('.todo-list li:first-child').find('input[type=\"checkbox\"]').check();\ntoggleAll.should('be.checked');\ncheckNumberOfCompletedTodosInLocalStorage(3);",
              "err": {},
              "uuid": "ea78c218-92fc-4ff7-9ec2-b60091ac4759",
              "parentUUID": "dea10a2a-fdcf-4d86-8115-76a9a63d0694",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab8ea4d9-e551-4bce-9e0c-514c12d64b96",
            "f04a3fc9-a103-4e8f-8be3-d9cbdfe2be1b",
            "ea78c218-92fc-4ff7-9ec2-b60091ac4759"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9b8883ae-ccda-494c-9cbe-907841ae6791",
          "title": "Item",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to mark items as complete",
              "fullTitle": "Item should allow me to mark items as complete",
              "timedOut": null,
              "duration": 673,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(`${TODO_ITEMS[0]}{enter}`).type(`${TODO_ITEMS[1]}{enter}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').check();\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed').find('[type=\"checkbox\"]').check();\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('have.class', 'completed');",
              "err": {},
              "uuid": "a348ea6e-6425-4606-8de3-c35c11883a7d",
              "parentUUID": "9b8883ae-ccda-494c-9cbe-907841ae6791",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to un-mark items as complete",
              "fullTitle": "Item should allow me to un-mark items as complete",
              "timedOut": null,
              "duration": 684,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(`${TODO_ITEMS[0]}{enter}`).type(`${TODO_ITEMS[1]}{enter}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').check().should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').uncheck().should('not.be.checked');\ncy.get('[data-testid=\"todo-item\"]').eq(0).should('not.have.class', 'completed');\ncy.get('[data-testid=\"todo-item\"]').eq(1).should('not.have.class', 'completed');",
              "err": {},
              "uuid": "e4800d14-215e-46de-854b-c5ec5fb92570",
              "parentUUID": "9b8883ae-ccda-494c-9cbe-907841ae6791",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to edit an item",
              "fullTitle": "Item should allow me to edit an item",
              "timedOut": null,
              "duration": 1470,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createDefaultTodos();\ncy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').type('{enter}');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);\ncy.get('[data-testid=\"todo-title\"]').should('have.text', `${TODO_ITEMS[0]}buy some sausages${TODO_ITEMS[2]}`);\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "69fd2f34-f7d4-4100-922f-81ba5bd0ae8c",
              "parentUUID": "9b8883ae-ccda-494c-9cbe-907841ae6791",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a348ea6e-6425-4606-8de3-c35c11883a7d",
            "e4800d14-215e-46de-854b-c5ec5fb92570",
            "69fd2f34-f7d4-4100-922f-81ba5bd0ae8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2827,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "07a5e770-b88c-45e3-aa7c-4dd0c1bbdf22",
          "title": "Editing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should hide other controls when editing",
              "fullTitle": "Editing should hide other controls when editing",
              "timedOut": null,
              "duration": 961,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick().should('have.class', 'editing').get('[type=\"checkbox\"]').should('not.be.visible');\ncy.get('[data-testid=\"todo-item\"]').eq(1).get('label').contains(TODO_ITEMS[1]).should('not.be.visible');",
              "err": {},
              "uuid": "c4c1106e-7951-4142-8325-f0458f4db3a2",
              "parentUUID": "07a5e770-b88c-45e3-aa7c-4dd0c1bbdf22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should save edits on blur",
              "fullTitle": "Editing should save edits on blur",
              "timedOut": null,
              "duration": 1367,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').blur();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3).eq(1).should('have.text', 'buy some sausages');\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "34fb346a-de78-4758-8547-a758a02afa11",
              "parentUUID": "07a5e770-b88c-45e3-aa7c-4dd0c1bbdf22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should trim entered text",
              "fullTitle": "Editing should trim entered text",
              "timedOut": null,
              "duration": 1523,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('    buy some sausages    ').type('{enter}');\ncy.get('.todo-list li').eq(1).should('contain', 'buy some sausages');\ncheckTodosInLocalStorage('buy some sausages');",
              "err": {},
              "uuid": "130d9c7b-4e2b-4740-b66c-6c46ab246e98",
              "parentUUID": "07a5e770-b88c-45e3-aa7c-4dd0c1bbdf22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove the item if an empty text string was entered",
              "fullTitle": "Editing should remove the item if an empty text string was entered",
              "timedOut": null,
              "duration": 1192,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('{enter}');\ncy.get('.todo-list li').should('have.length', 2);\ncheckTodosInLocalStorage(TODO_ITEMS[0], TODO_ITEMS[2]);",
              "err": {},
              "uuid": "ee9524de-0560-47cf-8f54-8347f2ae178e",
              "parentUUID": "07a5e770-b88c-45e3-aa7c-4dd0c1bbdf22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should cancel edits on escape",
              "fullTitle": "Editing should cancel edits on escape",
              "timedOut": null,
              "duration": 1414,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).dblclick();\ncy.get('[value=\"feed the cat\"]').dblclick().clear().type('buy some sausages').type('{esc}');\ncy.get('.todo-list li').should('have.length', 3);\ncheckTodosInLocalStorage(TODO_ITEMS[0], TODO_ITEMS[1], TODO_ITEMS[2]);",
              "err": {},
              "uuid": "c8e2d3ae-61aa-4829-837f-1e047865f29b",
              "parentUUID": "07a5e770-b88c-45e3-aa7c-4dd0c1bbdf22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4c1106e-7951-4142-8325-f0458f4db3a2",
            "34fb346a-de78-4758-8547-a758a02afa11",
            "130d9c7b-4e2b-4740-b66c-6c46ab246e98",
            "ee9524de-0560-47cf-8f54-8347f2ae178e",
            "c8e2d3ae-61aa-4829-837f-1e047865f29b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6457,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8b3a5b01-3991-4b2f-8536-e5b621809292",
          "title": "Counter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the current number of todo items",
              "fullTitle": "Counter should display the current number of todo items",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"What needs to be done?\"]').type(TODO_ITEMS[0] + '{enter}');\ncy.get('.todo-count').should('contain', '1');\ncy.get('[placeholder=\"What needs to be done?\"]').type(TODO_ITEMS[1] + '{enter}');\ncy.get('.todo-count').should('contain', '2');\ncheckNumberOfTodosInLocalStorage(2);",
              "err": {},
              "uuid": "b2f811b0-9420-4486-94ec-24be57fb9947",
              "parentUUID": "8b3a5b01-3991-4b2f-8536-e5b621809292",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2f811b0-9420-4486-94ec-24be57fb9947"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 514,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ce589592-4c5f-4919-a046-2f4e8049687f",
          "title": "Clear completed button",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display the correct text",
              "fullTitle": "Clear completed button should display the correct text",
              "timedOut": null,
              "duration": 949,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.todo-list li .toggle').first().check();\ncy.contains('Clear completed').should('be.visible');",
              "err": {},
              "uuid": "f2a68d80-f3c0-4c3b-85af-0665395a56a8",
              "parentUUID": "ce589592-4c5f-4919-a046-2f4e8049687f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove completed items when clicked",
              "fullTitle": "Clear completed button should remove completed items when clicked",
              "timedOut": null,
              "duration": 1067,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('input[type=\"checkbox\"]').check();\ncy.contains('Clear completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2).should('contain', TODO_ITEMS[0]).should('contain', TODO_ITEMS[2]);",
              "err": {},
              "uuid": "a09e3c13-a617-49ec-88c1-e5b26212917f",
              "parentUUID": "ce589592-4c5f-4919-a046-2f4e8049687f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be hidden when there are no items that are completed",
              "fullTitle": "Clear completed button should be hidden when there are no items that are completed",
              "timedOut": null,
              "duration": 1021,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.todo-list li .toggle').first().check();\ncy.get('.clear-completed').click();\ncy.get('.clear-completed').should('not.exist');",
              "err": {},
              "uuid": "0d7acdbf-a959-4950-9216-1632ed7dae41",
              "parentUUID": "ce589592-4c5f-4919-a046-2f4e8049687f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2a68d80-f3c0-4c3b-85af-0665395a56a8",
            "a09e3c13-a617-49ec-88c1-e5b26212917f",
            "0d7acdbf-a959-4950-9216-1632ed7dae41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3037,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "111b7cbf-f84b-444f-af3f-4ef26340e98e",
          "title": "Persistence",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should persist its data",
              "fullTitle": "Persistence should persist its data",
              "timedOut": null,
              "duration": 732,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// create a new todo locator\nconst newTodo = cy.get('[placeholder=\"What needs to be done?\"]');\nTODO_ITEMS.slice(0, 2).forEach(async item => {\n  await newTodo.type(`${item}{enter}`);\n});\nconst todoItems = cy.get('[data-testid=\"todo-item\"]');\nconst firstTodoCheck = todoItems.eq(0).find('[type=\"checkbox\"]');\nfirstTodoCheck.check();\ncy.get('[data-testid=\"todo-item\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').should('have.class', 'completed', '');\n// Ensure there is 1 completed item.\ncheckNumberOfCompletedTodosInLocalStorage(1);\n// Now reload.\ncy.reload();\ncy.get('[data-testid=\"todo-item\"]').should('have.text', `${TODO_ITEMS[0]}${TODO_ITEMS[1]}`);\ncy.get('[data-testid=\"todo-item\"]').eq(0).find('[type=\"checkbox\"]').should('be.checked');\ncy.get('[data-testid=\"todo-item\"]').should('have.class', 'completed', '');",
              "err": {},
              "uuid": "9c636cba-0850-4a46-8478-cdbb4e34ae6d",
              "parentUUID": "111b7cbf-f84b-444f-af3f-4ef26340e98e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c636cba-0850-4a46-8478-cdbb4e34ae6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 732,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2977a66f-0851-45bf-9ec6-389dd85c7f8b",
          "title": "Routing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow me to display active items",
              "fullTitle": "Routing should allow me to display active items",
              "timedOut": null,
              "duration": 992,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Active').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2).should('contain', TODO_ITEMS[0]).should('contain', TODO_ITEMS[2]);",
              "err": {},
              "uuid": "d3be4582-007a-459e-b51d-5273ce769ab6",
              "parentUUID": "2977a66f-0851-45bf-9ec6-389dd85c7f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should respect the back button",
              "fullTitle": "Routing should respect the back button",
              "timedOut": null,
              "duration": 1366,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('All').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);\ncy.contains('Active').click();\ncy.contains('Completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 1);\ncy.go('back');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 2);\ncy.go('back');\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);",
              "err": {},
              "uuid": "61c3b187-f52b-4706-a039-23d7dceda951",
              "parentUUID": "2977a66f-0851-45bf-9ec6-389dd85c7f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display completed items",
              "fullTitle": "Routing should allow me to display completed items",
              "timedOut": null,
              "duration": 1001,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Completed').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 1);",
              "err": {},
              "uuid": "e7876326-3a21-487f-99f4-ed3fb46edaed",
              "parentUUID": "2977a66f-0851-45bf-9ec6-389dd85c7f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow me to display all items",
              "fullTitle": "Routing should allow me to display all items",
              "timedOut": null,
              "duration": 1154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"todo-item\"]').eq(1).find('[type=\"checkbox\"]').check();\ncheckNumberOfCompletedTodosInLocalStorage(1);\ncy.contains('Active').click();\ncy.contains('Completed').click();\ncy.contains('All').click();\ncy.get('[data-testid=\"todo-item\"]').should('have.length', 3);",
              "err": {},
              "uuid": "d29b4e35-17bf-4a34-a2cd-93fd7d5d9f76",
              "parentUUID": "2977a66f-0851-45bf-9ec6-389dd85c7f8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should highlight the currently applied filter",
              "fullTitle": "Routing should highlight the currently applied filter",
              "timedOut": null,
              "duration": 1008,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('All').should('have.class', 'selected');\nconst activeLink = cy.contains('Active');\nconst completedLink = cy.contains('Completed');\nactiveLink.click();\nactiveLink.should('have.class', 'selected');\ncompletedLink.click();\ncompletedLink.should('have.class', 'selected');",
              "err": {},
              "uuid": "cf1e4613-f89b-43f9-b200-94864eb5d992",
              "parentUUID": "2977a66f-0851-45bf-9ec6-389dd85c7f8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3be4582-007a-459e-b51d-5273ce769ab6",
            "61c3b187-f52b-4706-a039-23d7dceda951",
            "e7876326-3a21-487f-99f4-ed3fb46edaed",
            "d29b4e35-17bf-4a34-a2cd-93fd7d5d9f76",
            "cf1e4613-f89b-43f9-b200-94864eb5d992"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5521,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}